<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6/v9Fwy87+n7/Vw9N4jYnZum893ro7L5S9jt6bD6/dw9Vn9Pt5/f9XnVMSpPRu1lx/VZZtONz0zj08t5
        Ja+kUj5mn1tmUiaa2dSJpdmUiaXZlIzpdnUyaXZlMmjZlMml2ZTJpdnUzOl2ZTJo2dVCaXZlUJo2ZVCa
        Nt7Qmjbe0Gjbe0HU2O0HU2V1C6TZXULpSuoNI+a6w9CZ5KpRUYyk32ibypt65+f3Pp+k9V1nXP8Al/h8
        31fpO17Ye/1/y+VrU3CUoS/VFuL1vqnZn1ccplJY+TlLjbL9FqXR9eaTjSqNNJp5Wk096bMZc3Hj75Rv
        Hg5MvbGuzD9X8RL9SjTXGUk3bkrnHP1vFj7eXfD0PLl7+HpUurdK3eqVG9vdyxXo0zz312e/Ej1Y/D8N
        ecq+dxdB06koP+FtX4rc/Q+hx5zPGZR8zkwuGVxv0P0fieyqRlu1jL+lqzJy4d8bGuHk6ZzJ77xqU021
        KLSi5J6PXuz+nnzPB8rePj9/k+l86TLz7fvVcPSL7snF2jKUrfw6xdrbfD2O/D7zf0ebn9rr6pRx9tt7
        OEXyeZNp+Ghu8O2Zz69/s5cZis6XFtyl9EdOPj6uXLy9nLmOrjt9mpHxtPvNUiaUykTS7MpE0bMpE01s
        ykTS7MpE0u2qRNLs6mTRsymTS7Mpk0bapk0uzZyaNtVQml2ZVCaTZs40bLUqacL6X4N7H6lmKZXwlQxe
        aN3/AGfA1lx6umcOTc2oqyeqM9dNy7QlitG9ydvc6Tj+jF5Pq1V738vRk6aWZ7cnSWP7OnKVr2XpK6sn
        zO3Dw9spHHn5umFr4qdKbyyf+q5WfF3s36s+1MsZuT6PhXHK6t+r7tTSWVP9KS5cD4WrfNfodyTUQWIv
        7fJM6dGJntyVMRbNq7q7vxjdq3t8jtMN6cMs9beP0xHtEqi2pO/7lfVeV378D1+n/BerxepneTOfv/p5
        sXFrXRpWTW/menzPZ5Jq+5qE7ZovZlem5u6JlN6rWF1uCWIeXL8vqJh52XO60lKTfsa0xaUqAD7BM+Rp
        97bUyaXbUyGzKQ0bapE0uzKRNLsykTRtqkTS7NGYsWZCU93H5fnzJIWthVuLjomWz5zOmg6g0bN2hNGy
        OvtW9K/M10+rNy+go4i9+KUffT6DLjMczVal4tbe67rwaJjj5XK7jyqFZxVSDd3Kq3F32x0lfnrL0PXl
        jLqz7f8Ax48MrO2N+/j/AJdMMVFObv3W078Fezfrf1RyvHbJPq7Tkktv0QpYq9JN6NzUWv8Adr9Tplx/
        jc8eTeG/z/VP4zs7z2xzLTZ3XsfhtTfI18rt+Fn5vT8X0PjoKayfqunKf7uC+duRnivW9l5ce06+/wB/
        3/w+dzvPTjmbhTk5wdldQbzXPo6/Dbrzff8A4fM3+KTfie38Pd7UMdo03Z2vJ6Pd/wAr82+K8Xl75zeL
        txYbpGz71+Hilbd5p+p3z4N+zz8fqNXyRYrSSb1cm7bnrqn4afIvy/MT5vi7cksRpJLY1ZX8zt08yuN5
        PFkcp0cWtgYAAAAB9YpbD5Wn3NmTIojIWEpkyaXbbk0bClr5DRvyFU2eI6m1FIzppGFfvpcYp+dv7G7h
        +Fzmf4hWq95K+538N79kvUY4/h2meX4tLwnZL+1mYs8usvg+czpdpSq95XdlFNvzuk/Zm5j4ZuXljrfO
        N/2q6HVLmytVsr87bteH5xLjjvwmWWvKEKru2tXBLX+ZWby+nudLjNfxc5ld38jQxiUY31zW83suZvF5
        qzl1jPzcGOnatFp6VFZvz2//AE/U9HFN4Wfb9/o83Ldckv3/AH+pKlfMpblBN2Wl73eXyW7jyLMNWfmz
        ln2l/L9/2bCsmknq5uk7arbKLbXt6i4+dz6b/VZnNav11+iPxa2P+FuXDcor5m/l36MfNn1/f0YsXkUo
        3co3SjxUVsXk7ofL7WVJy9ZZ7/4efVq3lJrY7+56McfE282WXm2MdZ+7frtHWJ2pLmmWAAAAAAAAAAH0
        jnaSXF28/wA+R87W4+t21W4iplTfHZ/UtSYY7q55dYpB208iVuGU9xnS7ap68hpdp1Ktn5u/LLf6I1Md
        sZZav7+zYz0i+NkuST/PMXHzSXxFJ1LK/D3MTFu5eHBCo49rKT1ztQ27E7L6nouO+sn83lmVx7W/fwKF
        ZSm3d2Tm21/FZpRXnt8lxGWNmOjDOXLf8f3+/wAnZ2+tm9/Pvfn1OPR37/Rs61uXq9n9hMdrctOOri9d
        NW8iSV9bK6Xq7+h2x4/Dz5cvk8cVbR/qvFpb5O9/p5Gbx79mpy68X3NPFd5XsrO0trV3vv8Am0k4/Hhb
        y+fLkqVknNp2zxjbX9LTdlzO0xtk39HDLOS3X1c88Re6veKem5q691p5XZuYa8ud5N7jnxGIcmnw08md
        McJJpyzzuV2z4l2aW/b4jpN7PmXWk3VfyXklZGurHalc3tNaTdK2EAAAAAAAAAAAAAAB7VapmbS2208J
        KUdvqjx4zXmvoZ5drqfv2bOrmjm2bLLhvb9fkJjq6Ln2x2ylXbim9O6nbe+HLaLhN+DHO68qyrd1tW3J
        Pi3pb1MzHz5bufjwelPi/tzM5RvHIlaWaM2nZ95Jvwdn+eBrGasYzvbG2IrE2kkv0x8brZok9+038vxt
        znL5k+kWq4jbfTS9vXazGODrlyPOw9VuWZu127Pxbu9vNnoyxmtR48MrbuiliLRslbu2XjJr72fkMsN3
        Zjyamos61kl5vxe4x187dO+poqxF9rtq0+W/3+RemvZPmb93POqrytsbdtW7LwT8EtTpMfE25XLzdFVW
        zTvd7efD85l678J21dmni217+f5ck45C8tqM6re384G5jIxcrSXKjAgAAAAAAAAAAAAAAAAAAADtq12n
        fer2tvu27HGYbj0ZZ2VSWJWqvtejtubu/n7IkwrV5J7Obt+7FXem18bPT2OnTza5d/EijxmnDVeiM/L8
        t/O8M+Me7hb7D5afOqc8S2rbt/jzNTCS7YvJbNFVZ/bwL1id6HXdmuOl/O46zZ3utFz6W3LcXSbZnf2G
        k23tH8hpe1Y5N68fcukt2W4QAAAAAAAAAAAAAAAAAAAAAAAAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/9k=
</value>
  </data>
</root>